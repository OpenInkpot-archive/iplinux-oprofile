all: oprof_start

prefix=@prefix@
exec_prefix=@exec_prefix@
BINDIR=@bindir@
MKDIR_P=mkdir -p

.PHONY: all clean install uninstall
.SUFFIXES:

# oprof_start.cpp, oprof_start.h are generated file, but must not re-generated
clean:
	rm -f *.o *.moc.* oprof_start.base.cpp oprof_start.base.h oprof_start

# TODO: the sys_include is for the <sstream> thing add it to distrib
CFLAGS=-I ../sys_include -DOP_EVENTS_DESC -g -ansi -Wall --pedantic -O2

install: all oprofile oprof_start
	-$(MKDIR_P) $(BINDIR)
# obsolete line, cleanup when remove oprofile gui.
	cp oprofile $(BINDIR)/oprofile && chmod 755 $(BINDIR)/oprofile
	cp oprof_start $(BINDIR)/oprof_start && chmod 755 $(BINDIR)/oprof_start

uninstall:
	-rm -f $(BINDIR)/oprofile
	@echo "---------------------------------------------------------------"
	@echo "The uninstall target does not remove your ~/.oprofile directory"
	@echo "---------------------------------------------------------------"

SOURCES=oprof_start.base.o oprof_start.base.moc.o oprof_start.o \
 oprof_start.moc.o oprof_start_impl.o op_events.o oprof_start_config.o \
 oprof_start_main.o

oprof_start: $(SOURCES)
	g++ -o $@ $^ -L$(QTDIR)/lib -lqt

%.o: %.cpp
	g++ -c $(CFLAGS) $< -o $@

%.o: %.c
	gcc -c $(CFLAGS) $< -o $@

op_events.o: ../op_events.c
	gcc -c $(CFLAGS) $< -o $@

# dependencies: auto-generated through CFLAGS += -MM, cat *.o
op_events.o: ../op_events.c ../op_user.h ../version.h
oprof_start.base.moc.o: oprof_start.base.moc.cpp oprof_start.base.h
oprof_start.base.o: oprof_start.base.cpp oprof_start.base.h
oprof_start.moc.o: oprof_start.moc.cpp oprof_start.h \
 oprof_start.base.h oprof_start_config.h persistent_config.h \
 ../op_user.h ../version.h
oprof_start.o: oprof_start.cpp oprof_start.h oprof_start.base.h \
 oprof_start_config.h persistent_config.h ../op_user.h ../version.h
oprof_start_config.o: oprof_start_config.cpp oprof_start_config.h \
 persistent_config.h ../op_user.h ../version.h
oprof_start_impl.o: oprof_start_impl.cpp oprof_start.h \
 oprof_start.base.h oprof_start_config.h persistent_config.h \
 ../op_user.h ../version.h
oprof_start_main.o: oprof_start_main.cpp oprof_start.h \
 oprof_start.base.h oprof_start_config.h persistent_config.h \
 ../op_user.h ../version.h            

# generate qt header file
oprof_start.base.h: oprof_start.base.ui
	uic -o oprof_start.base.h oprof_start.base.ui

# generate qt implementation file
oprof_start.base.cpp: oprof_start.base.h oprof_start.base.ui
	uic -o oprof_start.base.cpp -impl oprof_start.base.h oprof_start.base.ui

# generate qt moc code for base class
oprof_start.base.moc.cpp: oprof_start.base.h
	moc -o oprof_start.base.moc.cpp oprof_start.base.h

# generate qt moc code for subclass
oprof_start.moc.cpp: oprof_start.h oprof_start.base.moc.cpp
	moc -o oprof_start.moc.cpp oprof_start.h

# DO NOT un-comment these lines: just an examples of how to start a new form.
# after using this line you must edit oprof_start.cpp and replace the include
# oprof_start_base.h by oprof_start.h before compile it. I follow the following
# name scheme : xxxx.base.ui is the saved designer file form. xxxx_base.cpp/.h
# are base class read-only file. xxx.cpp/.h are derived class.

# generate qt subclass header/implementation file, these file are created once
#uic -o oprof_start.h -subdecl oprof_start oprof_start.base.h oprof_start.base.ui
#uic -o oprof_start.cpp -subimpl oprof_start oprof_start.h oprof_start.base.ui
