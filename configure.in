#   Autoconf script for oprofile
#
#   Copyright 1999 Olaf Titz <olaf@bigred.inka.de>
#   Adapted for oprofile
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version
#   2 of the License, or (at your option) any later version.
#

AC_REVISION($Id$)
AC_PREREQ(2.13)
AC_INIT(./oprofile.c)

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
PACKAGE=oprofile
VERSION=0.0.4

dnl for the man page
DATE="`date '+%a %d %B %Y'`"
AC_SUBST(DATE)
 
dnl -- local macros -- 
 
dnl AX_MSG_RESULT_YN(a)
dnl results "yes" iff a==1, "no" else
AC_DEFUN(AX_MSG_RESULT_YN, [x=no
test "x$1" = "x1" && x=yes
AC_MSG_RESULT($x)])

dnl AX_EGREP(expr, file, action-if-found, action-if-not-found)
dnl egrep for expr in file
AC_DEFUN(AX_EGREP, [dnl
changequote(, )dnl
  if egrep "$1" $2 >/dev/null 2>&1; then
changequote([, ])dnl
  ifelse([$3], , :, [$3])
ifelse([$4], , , [else
  $4
])dnl
fi
])

dnl AX_COMPILE_OPTION(option, action-if-found, action-if-not-found)
dnl see if autoconf.h defines the option
AC_DEFUN(AX_COMPILE_OPTION, [
SAVE_CFLAGS=$CFLAGS
CFLAGS="$BKCFLAGS -I$KINC -O2 -D__KERNEL__"
AC_TRY_COMPILE( [#include <linux/config.h>],
[
#ifndef $1
break_me_hard(\\\);
#endif
],[$2],[$3],)
CFLAGS=$SAVE_CFLAGS
])

# FIXME - fucking autoconf ! how do I override the cached value ??? 
AC_ARG_WITH(cc,    [  --with-cc=<kgcc>             C compiler used to compiler kernel], CC=$withval)
AC_SUBST(CC)

AC_PROG_CC
test "$GCC" || AC_ERROR(You would not have much luck compiling kernel code with non-gcc...)
AC_PROG_CPP
AC_PROG_CXX
AC_CHECK_PROG(LD,ld,ld,)
test "$LD" || AC_ERROR(ld not found)

dnl  --- Find the Linux kernel, at least the headers ---
 
AC_SUBST(KSRC)
KSRC=/lib/modules/`uname -r`/build
AC_ARG_WITH(linux, [  --with-linux=dir             Path to Linux source tree], KSRC=$withval) 
KINC=$KSRC/include
AC_SUBST(KINC)
 
if test ! -f $KINC/linux/autoconf.h; then
  AC_MSG_ERROR(no suitably configured kernel include tree found)
fi

dnl  --- Get Linux kernel version and compile parameters ---

AC_SUBST(KVERS)
AC_MSG_CHECKING(for kernel version)
KVERS=`sed -n 's:^#define  *UTS_RELEASE  *\"\([^"]*\).*$:\1:p' $KINC/linux/version.h`
AC_MSG_RESULT($KVERS)
case "$KVERS" in
2.4.*|2.5.*) ;;
*) AC_MSG_ERROR(Unsupported kernel version)
esac

AC_MSG_CHECKING("whether $CC accepts -mpreferred-stack-boundary=2")
SAVE_CFLAGS=$CFLAGS
CFLAGS="-mpreferred-stack-boundary=2 $CFLAGS"
AC_TRY_COMPILE(,,AC_MSG_RESULT("yes");BKCFLAGS="-mpreferred-stack-boundary=2 $BKCFLAGS",AC_MSG_RESULT("no"))
CFLAGS=$SAVE_CFLAGS

AC_MSG_CHECKING("whether malloc attribute is understood")
SAVE_CFLAGS=$CFLAGS
CFLAGS="-Werror $CFLAGS"
AC_TRY_COMPILE(,[
void monkey() __attribute__((malloc));
],AC_MSG_RESULT("yes"); CFLAGS="$SAVE_CFLAGS -DMALLOC_OK", AC_MSG_RESULT("no"); CFLAGS="$SAVE_CFLAGS")

 
AC_MSG_CHECKING(for x86 architecture)
AX_COMPILE_OPTION(CONFIG_X86,x86=1,x86=0)
AX_MSG_RESULT_YN($x86)
test "$x86" = 1 || AC_MSG_ERROR(Unsupported architecture)

AC_MSG_CHECKING(for SMP)
AX_COMPILE_OPTION(CONFIG_SMP,smp=1,smp=0)
AX_MSG_RESULT_YN($smp)
test "$smp" = 1 && echo "Warning: SMP totally untested !"

AC_MSG_CHECKING(for versioned modules)
mv=0
AX_COMPILE_OPTION(CONFIG_MODVERSIONS,mv=1,mv=0)
AX_MSG_RESULT_YN($mv)
MODVERSIONS=""
test "$mv" = 1 && MODVERSIONS="-DMODVERSIONS -include $KINC/linux/modversions.h"
AC_SUBST(MODVERSIONS)

# this serves to ensure that CONFIG_X86_UP_IOAPIC *or* CONFIG_X86_UP_APIC
# have been selected. The first case means we have to do APIC setup ourselves,
# the second case, it is important NOT to do it !
# in SMP, I have NO idea... 
if test "$smp" = 0; then 
  AC_MSG_CHECKING(for local APIC)
  AX_COMPILE_OPTION(CONFIG_X86_LOCAL_APIC,apic=1,apic=0)
  AX_MSG_RESULT_YN($apic)
  test "$apic" = 0 && AC_MSG_ERROR(local APIC not configured)
fi

BKCFLAGS="-I$KINC $BKCFLAGS"
AC_SUBST(BKCFLAGS)

MODINSTALLDIR=/lib/modules/$KVERS
 
AC_ARG_WITH(module-dir,
[  --with-module-dir=dir        Path to module installation directory], MODINSTALLDIR=$withval)
AC_SUBST(MODINSTALLDIR)

AC_ARG_ENABLE(filter,
[  --enable-filter              Enable filtering on pid or pgrp value feature (warning - slower !)], BKCFLAGS="$BKCFLAGS -DPID_FILTER")

AC_ARG_ENABLE(unload,
[  --enable-unload              Enable module to be unloaded (warning - slower !)], BKCFLAGS="$BKCFLAGS -DALLOW_UNLOAD")

dnl --- user space configuration ---

AC_ARG_WITH(extra-includes,
[  --with-extra-includes=DIR    add extra include paths],
  use_extra_includes="$withval",
  use_extra_includes=NO
)
if test -n "$use_extra_includes" && \
        test "$use_extra_includes" != "NO"; then
  ac_save_ifs=$IFS
  IFS=':'
  for dir in $use_extra_includes; do
    extra_includes="$extra_includes -I$dir"
  done
  IFS=$ac_save_ifs
  CPPFLAGS="$CPPFLAGS $extra_includes"
fi

AC_ARG_WITH(extra-libs,
[  --with-extra-libs=DIR        add extra library paths],
  use_extra_libs=$withval,
  use_extra_libs=NO
)
if test -n "$use_extra_libs" && \
        test "$use_extra_libs" != "NO"; then
   ac_save_ifs=$IFS
   IFS=':'
   for dir in $use_extra_libs; do
     extra_libraries="$extra_libraries -L$dir"
   done
   IFS=$ac_save_ifs
fi

AC_SUBST(extra_includes)
AC_SUBST(extra_libraries)

AC_CHECK_LIB(popt, poptGetContext,, AC_MSG_ERROR(popt library not found))
AC_CHECK_LIB(dl, dlopen,, AC_MSG_ERROR(dl library not found))
AC_CHECK_LIB(iberty, cplus_demangle,, AC_MSG_ERROR(liberty library not found))
AC_CHECK_LIB(bfd, bfd_openr,, AC_MSG_ERROR(bfd library not found))

AC_OUTPUT(Makefile dae/Makefile doc/Makefile doc/oprofile.1 pp/Makefile gui/Makefile version.h)
