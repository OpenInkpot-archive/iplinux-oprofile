#!/bin/sh

# This script simplify the call to oprofpp / objdump / opf_filter

objdump_option="-d --no-show-raw-insn"
oprofpp_option="-L"
op_filter_option=""
object_file=""
sample_file=""
do_to_asm=false

do_help() {
echo 'op_to_source usage: op_to_source [option]
  -a --assembly			   output assembly code
  -s --source-with-assembly        mix asm with source file (imply --assembly)
  -c --sort-by-counter counter_nr  sort the output by decreasing samples nr on
				   counter_nr
  -w --with-more-than-samples      show all source files if it contains more
				   than percent samples (0-100 allowed)
  -u --until-more-than-samples     show all source files until the threshold
				   specified is reached (0-100 allowed)
--with-more-than-samples and --until-more-samples can not be specified together
  -f --samples-file                specify the samples file
  -i --image-file                  specify the image file
  -d --demangle                    demangle symbol name
  -h --help                        this message
at least one of the image-file or the sample-file option must be given'
}

while [ "$#" -ne 0 ] 
do
	case "$1" in
		-a|--assembly)
			do_to_asm=true
			;;
		-s|--source-with-assembly)
			objdump_option="$objdump_option -S"
			do_to_asm=true
			;;
		-c|--sort-by-counter)
			shift
			if [ "$1" == "" ]; then
				echo "Missing counter argument to --sort-by-counter option"
				echo "see $0 --help"
				exit 1
			fi
			op_filter_option="$op_filter_option --sort-by-counter $1"
			;;
		-d|--demangle)
			oprofpp_option="$oprofpp_option -d"
			# I do not like the output of objdump with --demangle.
			# FIXME : is someone need it?
#			objdump_option="$objdump_option --demangle"
			;;
		-f|--samples-file)
			shift
			if [ "$1" == "" ]; then
				echo "Missing sample-file to --samples-file option"
				echo "see $0 --help"
				exit 1
			fi
			sample_file=$1
			;;
		-i|--image-file)
			shift
			if [ "$1" == "" ]; then
				echo "Missing image-file to --image-file option"
				echo "see $0 --help"
				exit 1
			fi
			object_file=$1
			;;
		-h|--help)
			do_help
			exit 0
			;;
		-w|--with-more-than-samples)
			shift
			if [ "$1" == "" ]; then
				echo "Missing percent argument to --with-more-than-samples option"
				echo "see $0 --help"
				exit 1
			fi
			op_filter_option="$op_filter_option --with-more-than-samples $1"
			;;
		-u|--until-more-than-samples)
			shift
			if [ "x$1" == "" ]; then
				echo "Missing percent argument to --until-more-than-samples option"
				echo "see $0 --help"
				exit 1
			fi
			op_filter_option="$op_filter_option --until-more-than-samples $1"
			;;
		*)
			echo "Unknown option \"$1\". See $0 --help"
			echo "$#"
			exit 1
			;; 
	esac
	shift
done

# PHE FIXME : this checking need to be remade with the new samples files naming
# scheme

# Check than enough option has been given.
if [ "$object_file" == "" -a "$sample_file" == "" ]; then
	echo "You need to give at least an object-file or a sample-file"
	echo "see $0 --help"
	exit 1
fi

if [ "$object_file" != "" -a ! -f "$object_file" ]; then
	echo "object file $object_file does not exist"
	exit 1
fi

# PHE FIXME: bogus here is case of passing sample_filename without the #x
# prefix. Should be rewrite perhaps.
#if [ "$sample_file" != "" -a ! -f "$sample_file" ]; then
#	echo "sample file $sample_file does not exist"
#	exit 1
#fi

if [ "$sample_file" != "" ]; then
	oprofpp_option="$oprofpp_option -f $sample_file"
fi

if [ "$object_file" != "" ]; then
	oprofpp_option="$oprofpp_option -i $object_file"
fi

#echo "option : $op_filter_option"

if [ "$do_to_asm" == "true" ]; then
	# TODO : how to break the pipe if the first part of a pipeline loss ?
	(oprofpp $oprofpp_option && echo "DISASSEMBLY_MARKER" && \
		objdump $object_file $objdump_option) | opf_filter $op_filter_option
else
	oprofpp $oprofpp_option -o | opf_filter --use-linenr-info $op_filter_option
fi
