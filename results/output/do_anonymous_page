This is an example of fine-grained analysis with oprofile and our
faithful companion objdump. In future revisions, this analysis procedure
will be automated somewhat (though I doubt it will ever reach the
capabilities of VTune in this regard :)

Compiling 2.4.0ac12 on 2.4.0ac12 left do_anonymous_page() at the top of
the profiles. Here we analyse that function (in mm/memory.c) further.

output of oprofpp --list-symbol=do_anonymous_page /boot/2.4.0ac12/vmlinux

Samples for symbol "do_anonymous_page" in image /boot/2.4.0ac12/vmlinux
do_anonymous_page+0/78:		13445
do_anonymous_page+1/78:		54501
do_anonymous_page+2/78:		429
do_anonymous_page+7/78:		22189
do_anonymous_page+8/78:		932
do_anonymous_page+e/78:		27
do_anonymous_page+12/78:	13237
do_anonymous_page+16/78:	1220
do_anonymous_page+19/78:	936
do_anonymous_page+1c/78:	1519
do_anonymous_page+21/78:	454
do_anonymous_page+23/78:	530
do_anonymous_page+25/78:	14487
do_anonymous_page+2a/78:	98
do_anonymous_page+2f/78:	3450
do_anonymous_page+31/78:	232
do_anonymous_page+33/78:	171
do_anonymous_page+3c/78:	227
do_anonymous_page+3f/78:	20404
do_anonymous_page+46/78:	6949078
do_anonymous_page+48/78:	111523
do_anonymous_page+4e/78:	2471
do_anonymous_page+54/78:	4900
do_anonymous_page+57/78:	82
do_anonymous_page+5a/78:	20
do_anonymous_page+5d/78:	11004
do_anonymous_page+60/78:	105
do_anonymous_page+63/78:	151873
do_anonymous_page+64/78:	9
do_anonymous_page+68/78:	5094
do_anonymous_page+6a/78:	15723
do_anonymous_page+6f/78:	16
do_anonymous_page+70/78:	1
do_anonymous_page+74/78:	442
do_anonymous_page+75/78:	597
do_anonymous_page+76/78:	4972
do_anonymous_page+77/78:	1123

output of objdump -d /boot/2.4.0ac12/vmlinux --start-address=0xc0120bbc --stop-address=0xc0120c34 --prefix-addresses :

/boot/2.4.0ac12/vmlinux:     file format elf32-i386

Disassembly of section .text:
c0120bbc <do_anonymous_page> push   %edi
c0120bbd <do_anonymous_page+0x1> push   %esi
c0120bbe <do_anonymous_page+0x2> mov    $0x104000,%edx
c0120bc3 <do_anonymous_page+0x7> push   %ebx
c0120bc4 <do_anonymous_page+0x8> and    $0xfffff000,%edx
c0120bca <do_anonymous_page+0xe> mov    0x14(%esp,1),%ebx
c0120bce <do_anonymous_page+0x12> mov    0x10(%esp,1),%esi
c0120bd2 <do_anonymous_page+0x16> or     0x10(%ebx),%edx
c0120bd5 <do_anonymous_page+0x19> and    $0xfffffffd,%edx
c0120bd8 <do_anonymous_page+0x1c> cmpl   $0x0,0x1c(%esp,1)
c0120bdd <do_anonymous_page+0x21> je     c0120c20 <do_anonymous_page+0x64>
c0120bdf <do_anonymous_page+0x23> xor    %edx,%edx
c0120be1 <do_anonymous_page+0x25> mov    $0xc020816c,%eax
c0120be6 <do_anonymous_page+0x2a> call   c012a828 <__alloc_pages>
c0120beb <do_anonymous_page+0x2f> mov    %eax,%edx
c0120bed <do_anonymous_page+0x31> test   %edx,%edx
c0120bef <do_anonymous_page+0x33> jne    c0120bf8 <do_anonymous_page+0x3c>
c0120bf1 <do_anonymous_page+0x35> mov    $0xffffffff,%eax
c0120bf6 <do_anonymous_page+0x3a> jmp    c0120c30 <do_anonymous_page+0x74>
c0120bf8 <do_anonymous_page+0x3c> mov    0x3c(%edx),%edi
c0120bfb <do_anonymous_page+0x3f> mov    $0x400,%ecx
c0120c00 <do_anonymous_page+0x44> xor    %eax,%eax
c0120c02 <do_anonymous_page+0x46> repz stos %eax,%es:(%edi)
c0120c04 <do_anonymous_page+0x48> sub    0xc0266e98,%edx
c0120c0a <do_anonymous_page+0x4e> imul   $0xf0f0f0f1,%edx,%edx
c0120c10 <do_anonymous_page+0x54> sar    $0x2,%edx
c0120c13 <do_anonymous_page+0x57> shl    $0xc,%edx
c0120c16 <do_anonymous_page+0x5a> or     0x10(%ebx),%edx
c0120c19 <do_anonymous_page+0x5d> or     $0x42,%edx
c0120c1c <do_anonymous_page+0x60> incl   0x68(%esi)
c0120c1f <do_anonymous_page+0x63> nop
c0120c20 <do_anonymous_page+0x64> mov    0x18(%esp,1),%eax
c0120c24 <do_anonymous_page+0x68> mov    %edx,(%eax)
c0120c26 <do_anonymous_page+0x6a> mov    $0x1,%eax
c0120c2b <do_anonymous_page+0x6f> nop
c0120c2c <do_anonymous_page+0x70> lea    0x0(%esi,1),%esi
c0120c30 <do_anonymous_page+0x74> pop    %ebx
c0120c31 <do_anonymous_page+0x75> pop    %esi
c0120c32 <do_anonymous_page+0x76> pop    %edi
c0120c33 <do_anonymous_page+0x77> ret


combined (I should write a perl script to do this ...)

do_anonymous_page+0/78:		13445 		> push   %edi
do_anonymous_page+1/78:		54501 		> push   %esi
do_anonymous_page+2/78:		429 		> mov    $0x104000,%edx
do_anonymous_page+7/78:		22189 		> push   %ebx
do_anonymous_page+8/78:		932 		> and    $0xfffff000,%edx
do_anonymous_page+e/78:		27 		> mov    0x14(%esp,1),%ebx
do_anonymous_page+12/78:	13237 		> mov    0x10(%esp,1),%esi
do_anonymous_page+16/78:	1220 		> or     0x10(%ebx),%edx
do_anonymous_page+19/78:	936 		> and    $0xfffffffd,%edx
do_anonymous_page+1c/78:	1519 		> cmpl   $0x0,0x1c(%esp,1)
do_anonymous_page+21/78:	454 		> je     c0120c20 <do_anonymous_page+0x64>
do_anonymous_page+23/78:	530 		> xor    %edx,%edx
do_anonymous_page+25/78:	14487 		> mov    $0xc020816c,%eax
do_anonymous_page+2a/78:	98 		> call   c012a828 <__alloc_pages>
do_anonymous_page+2f/78:	3450 		> mov    %eax,%edx
do_anonymous_page+31/78:	232 		> test   %edx,%edx
do_anonymous_page+33/78:	171 		> jne    c0120bf8 <do_anonymous_page+0x3c>
do_anonymous_page+35/78:	<none>		> mov    $0xffffffff,%eax
do_anonymous_page+3a/78:	<none>		> jmp    c0120c30 <do_anonymous_page+0x74>
do_anonymous_page+3c/78:	227 		> mov    0x3c(%edx),%edi
do_anonymous_page+3f/78:	20404 		> mov    $0x400,%ecx
do_anonymous_page+44/78: 	<none>		> xor    %eax,%eax
do_anonymous_page+46/78:	6949078 	> repz stos %eax,%es:(%edi)
do_anonymous_page+48/78:	111523 		> sub    0xc0266e98,%edx
do_anonymous_page+4e/78:	2471 		> imul   $0xf0f0f0f1,%edx,%edx
do_anonymous_page+54/78:	4900 		> sar    $0x2,%edx
do_anonymous_page+57/78:	82 		> shl    $0xc,%edx
do_anonymous_page+5a/78:	20 		> or     0x10(%ebx),%edx
do_anonymous_page+5d/78:	11004 		> or     $0x42,%edx
do_anonymous_page+60/78:	105 		> incl   0x68(%esi)
do_anonymous_page+63/78:	151873 		> nop
do_anonymous_page+64/78:	9 		> mov    0x18(%esp,1),%eax
do_anonymous_page+68/78:	5094 		> mov    %edx,(%eax)
do_anonymous_page+6a/78:	15723 		> mov    $0x1,%eax
do_anonymous_page+6f/78:	16 		> nop
do_anonymous_page+70/78:	1 		> lea    0x0(%esi,1),%esi
do_anonymous_page+74/78:	442 		> pop    %ebx
do_anonymous_page+75/78:	597 		> pop    %esi
do_anonymous_page+76/78:	4972 		> pop    %edi
do_anonymous_page+77/78:	1123 		> ret

Note the mov/jmp sequence that was never caught by the profiler. In fact these
instructions were never executed, as they result from the error path of
mm/page_alloc.c:__alloc_pages() :

	/* No luck.. */
	printk(KERN_ERR "__alloc_pages: %lu-order allocation failed.\n", order);
	return NULL;
