# $Id$

BKCFLAGS=@BKCFLAGS@ @MODVERSIONS@
MODINSTALLDIR=@MODINSTALLDIR@/oprofile
MKDIR_P=mkdir -p
CC=@CC@
LD=@LD@

.PHONY: all install clean distclean maintainerclean uninstall tags

all: oprofile.o
	$(MAKE) -C dae
	$(MAKE) -C pp
	$(MAKE) -C gui

# doc/Makefile is deleted here but should be deleted in distclean.
# When the dist target works move it as action of distclean.
maintainerclean: distclean
	rm -f configure doc/Makefile aclocal.m4

distclean: clean
	rm -f Makefile doc/oprofile.1 dae/Makefile pp/Makefile gui/Makefile tags config.status config.log config.cache version.h

# broken 
# dist check list:
# 1. make dist (with doopr) 
# 2. upload to sf
# 3. untar into webpage
# 4. add release
# 5. send release email
# 6. update freshmeat
dist:
	mkdir tmpdist ; \
	cd tmpdist ; \
	cvs checkout oprofile ; \
	cd oprofile ; \
	(find -type d -name CVS | xargs rm -rf) ; \
	./autogen.sh ; \
	./configure ; \
	cp doc/Makefile doc/Makefile.tmp ; \
	make distclean ; \
	cd doc && make -f Makefile.tmp && rm -f Makefile.tmp && cd .. ; \
	cd .. ; \
	mv oprofile oprofile-@VERSION@ ; \
	tar cvfz ../oprofile-@VERSION@.tar.gz oprofile-@VERSION@ ; \
	rm -rf oprofile-@VERSION@ ; \
	cd ..  ; \
	rm -rf tmpdist \

tags:
	ctags -R

install: all oprofile.o
	-$(MKDIR_P) $(MODINSTALLDIR)
	cp oprofile.o $(MODINSTALLDIR)
	depmod -a
	$(MAKE) -C dae install
	$(MAKE) -C pp install
	$(MAKE) -C doc install 
	$(MAKE) -C gui install

uninstall:
	-rm -f $(MODINSTALLDIR)/oprofile.o
	-rmdir --ignore-fail-on-non-empty  $(MODINSTALLDIR)
	depmod -a
	$(MAKE) -C dae uninstall
	$(MAKE) -C pp uninstall
	$(MAKE) -C doc uninstall
	$(MAKE) -C gui uninstall
	@echo "Goodbye."

clean:
	rm -f *.o
	$(MAKE) -C dae clean
	$(MAKE) -C pp clean
	$(MAKE) -C doc clean
	$(MAKE) -C gui clean

BKCFLAGS += -pipe -D__KERNEL__ -DMODULE -Wall -Wstrict-prototypes -Wunused -O2 -fomit-frame-pointer -fno-strict-aliasing
KCFLAGS := $(BKCFLAGS) -march=i686
ASMFLAGS := -D__ASSEMBLY__ -DMODULE -D__KERNEL__ -traditional

oprofile.o: op_init.o op_util.o oprofile_c.o oprofile_nmi.o op_syscalls.o op_events_module.o op_x86.o
	ld -r -o $@ $^

oprofile.h: op_user.h version.h

op_init.o: op_init.c oprofile.h
	$(CC) $(BKCFLAGS) -c -o $@ $<

op_util.o: op_util.c
	$(CC) $(KCFLAGS) -c -o $@ $<

oprofile_c.o: oprofile.c oprofile.h
	$(CC) $(KCFLAGS) -c -o $@ $<

op_x86.o: op_x86.c
	$(CC) $(KCFLAGS) -c -o $@ $<

op_syscalls.o: op_syscalls.c oprofile.h
	$(CC) $(KCFLAGS) -c -o $@ $<

oprofile.s: oprofile.c oprofile.h
	$(CC) $(KCFLAGS) -S $<

op_events_module.o: op_events.c op_user.h
	$(CC) $(KCFLAGS) -c -o op_events_module.o $<

oprofile_nmi.o: oprofile_nmi.S
	$(CC) $(ASMFLAGS) -c -o $@ $<
