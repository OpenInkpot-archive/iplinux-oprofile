2001-04-08  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in: 0.0.3 has been released. Bump cvs version
	  to 0.0.4

2001-04-05  John Levon  <moz@compsoc.man.ac.uk>

	* dae/opd_proc.c: remove forced dumping. It was
	causing overhead spikes

	* doc/html/results.html:
	* doc/oprofile.sgml:
	* dae/op_start: Hopefully document dump clearly enough

2001-04-05  John Levon  <moz@compsoc.man.ac.uk>

	* oprofile.h:
	* op_syscalls.c: 2.4.3 and above have a rw mmap_sem

2001-04-05  John Levon  <moz@compsoc.man.ac.uk>

	* doc/html/: added missing files

2001-04-05  John Levon  <moz@compsoc.man.ac.uk>

	* doc/oprofile.sgml:
	* doc/html/resources.html: add URLs

2001-04-05  John Levon  <moz@compsoc.man.ac.uk>

	* pp/oprofpp.c: fix gprof output bug. It works OK now,
	  but MULTIPLIER == 1 will break for some reason

2001-04-05  John Levon  <moz@compsoc.man.ac.uk>

	* doc/oprofile.sgml:
	* doc/html/: finish SGML documentation (for now)

2001-04-04  John Levon  <moz@compsoc.man.ac.uk>

	* doc/Makefile.in:
	* doc/oprofile.sgml:
	* doc/oprofile: start SGML documentation

2001-04-04  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in:
	* Makefile.in:
	* doc/Makefile.in:
	* doc/oprofile.1.in: add a manpage
 
2001-04-04  John Levon  <moz@compsoc.man.ac.uk>

	* pp/oprofpp.c: get some sort of half-working output
	in gprof format. Currently the numbers are screwed up,
	need a major trawl through gprof source to see what's
	going on. 

2001-04-04  John Levon  <moz@compsoc.man.ac.uk>

	* dae/Makefile.in:
	* dae/md5.c:
	* dae/md5.h:
	* dae/opd_proc.c:
	* dae/oprofiled.h:
	* pp/Makefile.in:
	* pp/oprofpp.c:
	* pp/oprofpp.h: use md5sums to verify sample file
  	  integrity. Stored in each sample file footer are
	  md5sums of the binary. These are checked by the daemon
	  when re-using an old file, and by the post-processor.
	  Bump OPD_VERSION to reflect the file format change.

	* dae/oprofiled.c: make start up more friendly 
	
	* dae/op_start: make script more friendly

2001-03-10  John Levon  <moz@compsoc.man.ac.uk>

	* dae/opd_proc.c: fixed some error messages

	* results/kernel-compile/raw/ccu.gnuplot: add
 
2001-02-05  John Levon  <moz@compsoc.man.ac.uk>

	* TODO: update

	* results/intro: update

	* results/kernel-compile/: update, add FIG files

	* results/lmbench: lmbench results

	* results/output/kernel-ac12-output: add readprofile output

2001-02-04  John Levon  <moz@compsoc.man.ac.uk>

	* TODO: update

	* op_syscalls.c: small re-org, some micro-optimisations
	  to do_hash()

	* pp/oprofpp.c: clean up --list-symbol output a little

	* results/kernel-compile/overhead: update with results

	* results/kernel-compile/time-aves.pl: add gnuplot output

	* results/kernel-compile/raw/ : raw output files

	* results/output/ : new dir for example output

	* results/output/libc-2.1.92.so: output from libc profile

	* results/output/kernel-ac12-output: output from kernel profile

	* results/output/do_anonymous_page: detailed symbol profile

	* results/output/oprofile.module: output for oprofile module

2001-02-03  John Levon  <moz@compsoc.man.ac.uk>

	* TODO: update

	* oprofile.h:
	* op_syscalls.c: make do_hash() non-recursive

	* oprofile.c: make thread wake up half as often

	* dae/opd_proc.c: quiesce dump sysctl
	  make resilient against broken sample (don't exceed mmap)

	* pp/oprofpp.c: --gcc-demangle -> --demangle, just too
	  annoying to live
 
2001-02-01  John Levon  <moz@compsoc.man.ac.uk>

	* oprofile.h: add op_save_syscalls()

	* oprofile.c: let interrupt_sleep_on() die
	  add kernel_only option
	  sysctl dumps everything it can now
 
	* op_syscalls.c: add op_save_syscalls() 

	* dae/opd_proc.c:
	* dae/oprofiled.c:
	* dae/op_start: add --kernel-only
 
	* doc/guide.lyx: mention --kernel-only
 
	* TODO: update
 
2001-02-01  John Levon  <moz@compsoc.man.ac.uk>

	* Makefile.in: split out op_init.c

	* autogen.sh: new file

	* configure.in: fix --with-cc. Split out op_init.c
	
	* op_init.c: new file, to allow rest -march=i686

	* oprofile.c: cut out init stuff to op_init.c 

	* opd_proc.c: more verbose

	* results/kernel-compile/time-aves.pl: work with other
	  time format too 
	 
2001-01-25  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in: add --with-cc option

	* pp/oprofpp.c: fix const discard warnings

2001-01-25  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in: must check for liberty *after*
	  libdl

2001-01-24  John Levon  <moz@compsoc.man.ac.uk>

	* oprofile.c: we're not using op_check_ctr()
		return value, so don't have one

2001-01-23  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in:
	* op_syscalls.c:
	* oprofile.c:
	* oprofile.h: stripped the NMI error handling stuff

	* op_events.c: fixed silly bug in the other place too :P
	
	* dae/oprofiled.c: improved error messages

2001-01-22  John Levon  <moz@compsoc.man.ac.uk>

	* op_events.c: fix silly bug so you can set both
		counters at once

	* oprofile.c: don't disable/enable counters in
		the interrupt handler. It's expensive and
		doesn't really buy anything.
		Fix a silly EBUSY bug when open fails once.

	* dae/op_start: don't remove old sample files
		pass correct event to daemon for ctr1

2001-01-22  John Levon  <moz@compsoc.man.ac.uk>

	* op_syscalls.c:do_hash(): use strcpy not strncpy. 
		It's probably faster, and if d_name.len is corrupted
		the kernel has bigger things to worry about.

2001-01-22  John Levon  <moz@compsoc.man.ac.uk>

	* dae/guide.lyx:
	* dae/guide.html: update docs a little

2001-01-22  John Levon  <moz@compsoc.man.ac.uk>

	* dae/op_start:
	* op_user.h: bump up hash table size

	* results/kernel-compile/overhead: intro to kernel
		compile tests

	* results/kernel-compile/time-aves.pl: script
		to generate averages + overheads

	* op_syscalls.c: three fixes to do_hash(). It's
		going to be a pain to make iterative :(

2001-01-21  John Levon  <moz@compsoc.man.ac.uk>

	* results/: Started a collection of results

2001-01-20  John Levon  <moz@compsoc.man.ac.uk>

	* TODO: update

	* configure.in: add comment

	* Makefile.in: moved oprofile_k.c to op_syscalls.c, op_user.h added

	* op_syscalls.c: rename of oprofile_k.c
		map buffer is dead now
		use vmalloc() and friends for hash map
		Reworking of hash_map stuff into abb's linked
		hash map structure

	* op_user.h: new file representing shared structs etc.
		between daemon and kernel module
		Reworked OP_ flags in count.
		Reworked hash map structure

	* oprofile.c: get along with the new UP APIC stuff in 2.4.0ac9
		remove extraneous lock_kernel()
		default buffer size added
		map buffer died
		Use up_and_exit() in kernel thread to fix zombies :P
		Set diethreaddie = 0 in start_thread()
		oprof_put_mapping() added
		we weren't turning OFF kernel/user counting when asked to

	* oprofile.h: move shared stuff to op_user.h
		increase the watermark to a much safer 768

	* dae/Makefile.in: dependencies on op_user.h and version.h 

	* dae/op_start: hide confusing output of op_stop
		--verbose option
		map buffer died

	* dae/opd_proc.c: --verbose option
		don't insist on new sample files
		Rework mapping code
		Be a little more forgiving with unstattable images 

	* dae/opd_util.h:
	* dae/opd_util.c: add fatal flag to opd_get_fsize().

	* dae/oprofiled.h: --verbose option
		move common code to op_user.h

	* dae/oprofiled.c: add --verbose option (very verbose !)
		map buffer died
		Add code for unpacking mapping notifications, rework
		mapping recognition

	* doc/guide.html:
	* doc/guide.lyx: some small updates

	* pp/oprofpp.c: fix segfault on failure to open binary.
		add --verbose option

	* pp/oprofpp.h: add --verbose option

2000-01-12  John Levon  <moz@compsoc.man.ac.uk>

	* oprofile.c: use standard kernel names for MSRs.
		Don't re-do fixmap if UP oopser patch is installed.
		Allow UP oopser to work if patches enabled, disable
		otherwise

	* oprofile.h: use standard kernel names for MSRs.

	* oprofile_k.c: only include fixmap code if necessary

	* configure.in: bump minor version

2000-12-15  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in: default to /lib/modules/`uname -r`/build
		as kernel source directory

	* doc/guide.lyx:
	* doc/guide.html: update documentation

2000-12-13  John Levon  <moz@compsoc.man.ac.uk>

	* configure.in: bump minor version

	* oprofile.c: added KERN_<whatever> where needed,
		exclude the Pentium IV	

	* pp/oprofpp.c: allow "oprofpp -l /bin/mv" and friends,
		some minor fixes

2000-12-12  John Levon  <moz@compsoc.man.ac.uk>

	* Makefile.in:
	* configure.in: approximate working modversions
		a little more

	* op_events.c: op_help INST_RETIRED will print out
		the value now

	* op_ioctl.h:
	* oprofile.c:
	* oprofile.h:
	* oprofile_k.c:
	* dae/Makefile.in:
	* dae/op_start:
	* dae/op_stop:
	* dae/opd_proc.c:
	* dae/oprofctl.c:
	* dae/oprofctl.h:
	* dae/oprofiled.h: ioctl() didn't last long. Replaced with
		sysctls. This has had a knock-on effect of moving the
		start/stop mechanism into the driver open/close routines
	 
	* dae/oprofiled.c: must open devices in "reverse" order now
	 
	* oprofile_k.c: fix X86_FEATURE_PGE testing
	 
	* oprofile.c: use daemonize()
	
	* pp/oprofpp.c: fix working on constant argv

2000-11-04  John Levon  <moz@compsoc.man.ac.uk>

	* oprofile.c: what if signal happens later ?
	* dae/opd_util.c: clarify opd_read_device() API

2000-11-04  John Levon  <moz@compsoc.man.ac.uk>

	* ChangeLog: started ChangeLog (cue gc koan)
	* op_ioctl.h: added FIXME comment
	* oprofile.c: slight cleanup 
	* oprofile.h: cleanups, use u16 for data->ctrs,
		data->next
	
	* pp/oprofpp.c: added comments
	* pp/oprofpp.h: fixed #defines
